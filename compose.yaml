version: "3.7"

services:
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    # network_mode: "host"           # for we can direct access metric from host, but not works on windows
    ports:
    - "9100:9100" 
    pid: "host"                    # so can see all host processes
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($|/)"'

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    user: "nobody:nobody"  # run as nobody user
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'  # save data for max 15 days
      # - '--storage.tsdb.retention.size=10GB' # size threshold for data retention if needed it
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro # alerts configuration

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin # you can change this or using ENV variable, but on default will using admin/admin 
    - GF_SECURITY_ADMIN_USER=admin
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_LOG_MODE=console file  # Log to console and file
    - GF_LOG_LEVEL=info         # Log level
    - GF_PATHS_LOGS=/var/log/grafana  # Path log at container
    volumes:
    - ./data/grafana:/var/lib/grafana
    - ./grafana/provisioning:/etc/grafana/provisioning
    - ./logs/grafana:/var/log/grafana # parsing grafana logs

  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    user: "65534:65534" # using user nobody:nobody
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/config.yml
      - ./logs/alertmanager:/alertmanager  # save log on folder host
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--log.level=debug'

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
